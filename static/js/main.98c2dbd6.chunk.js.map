{"version":3,"sources":["redux/todoSlice.js","components/TodoItem.jsx","components/TodoList.jsx","components/TotalItems.jsx","components/UncompletedItems.jsx","components/Content.jsx","components/AddTodoForm.jsx","App.js","redux/store.js","index.js"],"names":["uniqid","require","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","newTodo","id","title","payload","completed","push","toggleComplete","indexOfToggledTodo","findIndex","todo","currentStateId","deleteTodo","indexOfDeletedTodo","splice","actions","todoReducer","reducer","TodoItem","dispatch","useDispatch","ListGroup","Item","variant","Row","className","Col","lg","sm","Form","Check","type","checked","onChange","Button","onClick","TodoList","todos","useSelector","map","TotalItems","totalTodos","length","UncompletedItems","uncompletedTodos","filter","Content","AddTodoForm","useState","value","setValue","Container","onSubmit","event","preventDefault","md","Group","Label","Control","placeholder","target","App","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98c2dbd6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nvar uniqid = require(\"uniqid\");\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: uniqid(\"todo-\"),\n        title: action.payload.title,\n        completed: false,\n      };\n      state.push(newTodo);\n    },\n    toggleComplete: (state, action) => {\n      const indexOfToggledTodo = state.findIndex(\n        (todo) => todo.id === action.payload.id,\n      );\n      const currentStateId = state[indexOfToggledTodo].completed;\n      state[indexOfToggledTodo].completed = !currentStateId;\n    },\n    deleteTodo: (state, action) => {\n      const indexOfDeletedTodo = state.findIndex(\n        (todo) => todo.id === action.payload.id,\n      );\n      state.splice(indexOfDeletedTodo, 1);\n    },\n  },\n});\n\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\n\nexport const todoReducer = todoSlice.reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleComplete, deleteTodo } from \"../redux/todoSlice\";\nimport { ListGroup, Form, Row, Col, Button } from \"react-bootstrap\";\n\nexport const TodoItem = ({ id, title, completed }) => {\n  const dispatch = useDispatch();\n\n  const onChangeStatus = () => {\n    dispatch(toggleComplete({ id }));\n  };\n\n  const onDelete = () => {\n    dispatch(deleteTodo({ id }));\n  };\n\n  return (\n    <ListGroup.Item variant={completed ? \"success\" : \"warning\"}>\n      <Row className='align-items-center'>\n        <Col lg={10} sm={9}>\n          <div className='d-flex'>\n            <Form.Check\n              type='checkbox'\n              className='d-block mr-3'\n              checked={completed}\n              onChange={onChangeStatus}\n            />\n            <p className='w-100 mb-0'>{title}</p>\n          </div>\n        </Col>\n        <Col lg={2} sm={3} className='text-end'>\n          <Button variant='danger' onClick={onDelete}>\n            Delete\n          </Button>\n        </Col>\n      </Row>\n    </ListGroup.Item>\n  );\n};\n","import React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nimport { useSelector } from \"react-redux\";\nimport { ListGroup } from \"react-bootstrap\";\n\nexport const TodoList = () => {\n  const todos = useSelector((state) => state.todos);\n\n  return (\n    <ListGroup className='mb-5'>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          title={todo.title}\n          completed={todo.completed}\n        />\n      ))}\n    </ListGroup>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const TotalItems = () => {\n  const totalTodos = useSelector((state) => state.todos.length);\n  return <h4 className='mt-3'>Total ToDos: {totalTodos}</h4>;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const UncompletedItems = () => {\n  const uncompletedTodos = useSelector(state => state.todos.filter(todo =>  todo.completed === false ));\n  return (\n    <h4 className='mt-3'>You Have {uncompletedTodos.length} Uncompleted ToDos</h4>\n  );\n};\n","import React from \"react\";\n\nimport { TodoList } from \"./TodoList\";\nimport { TotalItems } from \"./TotalItems\";\nimport { UncompletedItems } from \"./UncompletedItems\";\n\nexport const Content = () => {\n  return (\n    <>\n      <hr className='mb-5'></hr>\n      <UncompletedItems />\n      <TodoList />\n      <TotalItems />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/todoSlice\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\n\nexport const AddTodoForm = () => {\n  const [value, setValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dispatch(\n      addTodo({\n        title: value,\n      }),\n    );\n    setValue(\"\");\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <Row className='align-items-end'>\n          <Col lg={11} md={10} sm={9}>\n            <Form.Group className='mb-3 mr-3'>\n              <Form.Label>Add New ToDo</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Add todo...'\n                value={value}\n                onChange={(event) => setValue(event.target.value)}\n              />\n            </Form.Group>\n          </Col>\n          <Col lg={1} md={2} sm={3} >\n            <Button className='mb-3' variant='primary' type='submit'>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { Content } from \"./components/Content\";\nimport { AddTodoForm } from \"./components/AddTodoForm\";\nimport { Container } from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  const totalTodos = useSelector((state) => state.todos.length);\n\n  return (\n    <Container className='bg-light p-5 rounded'>\n      <h1>My Todo List</h1>\n      <hr className='mb-5'></hr>\n      <AddTodoForm />\n      {totalTodos > 0 && <Content />}\n    </Container>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { todoReducer } from \"./todoSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}