{"version":3,"sources":["redux/todoSlice.js","components/TodoItem.jsx","components/TodoList.jsx","components/TotalItems.jsx","components/UncompletedItems.jsx","components/Content.jsx","components/AddTodoForm.jsx","App.js","redux/store.js","index.js"],"names":["uniqid","require","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","newTodo","id","title","payload","completed","push","toggleComplete","indexOfToggledTodo","findIndex","todo","currentStateId","deleteTodo","indexOfDeletedTodo","splice","actions","todoReducer","reducer","TodoItem","dispatch","useDispatch","ListGroup","Item","variant","Row","className","Col","lg","sm","Form","Check","type","checked","onChange","Button","onClick","TodoList","useState","stateTodos","setStateTodos","todos","useSelector","useEffect","TransitionGroup","map","CSSTransition","timeout","classNames","TotalItems","stateCounter","setStateCounter","totalTodos","length","in","end","UncompletedItems","uncompletedTodos","filter","Content","Fragment","AddTodoForm","value","setValue","Container","onSubmit","event","preventDefault","md","Group","Label","Control","placeholder","target","disabled","App","style","transition","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.225a4298.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nvar uniqid = require(\"uniqid\");\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: uniqid(\"todo-\"),\n        title: action.payload.title,\n        completed: false,\n      };\n      state.push(newTodo);\n    },\n    toggleComplete: (state, action) => {\n      const indexOfToggledTodo = state.findIndex(\n        (todo) => todo.id === action.payload.id,\n      );\n      const currentStateId = state[indexOfToggledTodo].completed;\n      state[indexOfToggledTodo].completed = !currentStateId;\n    },\n    deleteTodo: (state, action) => {\n      const indexOfDeletedTodo = state.findIndex(\n        (todo) => todo.id === action.payload.id,\n      );\n      state.splice(indexOfDeletedTodo, 1);\n    },\n  },\n});\n\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\n\nexport const todoReducer = todoSlice.reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleComplete, deleteTodo } from \"../redux/todoSlice\";\nimport { ListGroup, Form, Row, Col, Button } from \"react-bootstrap\";\n\nexport const TodoItem = ({ id, title, completed }) => {\n  const dispatch = useDispatch();\n\n  const onChangeStatus = () => {\n    dispatch(toggleComplete({ id }));\n  };\n\n  const onDelete = () => {\n    dispatch(deleteTodo({ id }));\n  };\n\n  return (\n      <ListGroup.Item variant={completed ? \"success\" : \"warning\"}>\n        <Row className='align-items-center'>\n          <Col lg={10} sm={9}>\n            <div className='d-flex'>\n              <Form.Check\n                type='checkbox'\n                className='d-block mr-3'\n                checked={completed}\n                onChange={onChangeStatus}\n              />\n              <p className='w-100 mb-0'>{title}</p>\n            </div>\n          </Col>\n          <Col lg={2} sm={3} className='text-end'>\n            <Button variant='danger' onClick={onDelete}>\n              Delete\n            </Button>\n          </Col>\n        </Row>\n      </ListGroup.Item>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { TodoItem } from \"./TodoItem\";\nimport { useSelector } from \"react-redux\";\nimport { ListGroup } from \"react-bootstrap\";\n\nimport \"./todoList.css\";\n\nexport const TodoList = () => {\n  const [stateTodos, setStateTodos] = useState([]);\n\n  const todos = useSelector((state) => state.todos);\n\n  useEffect(() => {\n    setStateTodos(todos);\n  }, [todos]);\n\n  return (\n\n    <ListGroup className='mb-5'>\n      <TransitionGroup className='todo-list'>\n        {stateTodos.map((todo) => (\n          <CSSTransition key={todo.id} timeout={500} classNames='item'>\n            <TodoItem\n              key={todo.id}\n              id={todo.id}\n              title={todo.title}\n              completed={todo.completed}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </ListGroup>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useSelector } from \"react-redux\";\nimport CountUp from \"react-countup\";\n\nexport const TotalItems = () => {\n  const [stateCounter, setStateCounter] = useState(false);\n\n  const totalTodos = useSelector((state) => state.todos.length);\n\n  useEffect(() => {\n    setStateCounter(true);\n  }, [totalTodos]);\n\n  return (\n    <CSSTransition in={stateCounter} timeout={500} className='counter'>\n      <h4 className='mt-3'>\n        Total ToDos: <CountUp end={totalTodos} />\n      </h4>\n    </CSSTransition>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CountUp from \"react-countup\";\n\nexport const UncompletedItems = () => {\n  const uncompletedTodos = useSelector(state => state.todos.filter(todo =>  todo.completed === false ));\n  return (\n    <h4 className='mt-3'>You Have <CountUp end={uncompletedTodos.length}/> Uncompleted ToDos</h4>\n  );\n};\n","import React from \"react\";\n\nimport { TodoList } from \"./TodoList\";\nimport { TotalItems } from \"./TotalItems\";\nimport { UncompletedItems } from \"./UncompletedItems\";\n\nexport const Content = () => {\n  return (\n    <React.Fragment>\n      <hr className='mb-5'></hr>\n      <UncompletedItems />\n      <TodoList />\n      <TotalItems />\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/todoSlice\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\n\nexport const AddTodoForm = () => {\n  const [value, setValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dispatch(\n      addTodo({\n        title: value,\n      }),\n    );\n    setValue(\"\");\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <Row className='align-items-end'>\n          <Col lg={10} md={10} sm={10}>\n            <Form.Group className='mb-3 mr-3'>\n              <Form.Label>Add New ToDo</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Add todo...'\n                value={value}\n                onChange={(event) => setValue(event.target.value)}\n              />\n            </Form.Group>\n          </Col>\n          <Col lg={2} md={2} sm={2} className='text-end'>\n            <Button\n              className='mb-3'\n              variant='primary'\n              type='submit'\n              disabled={value === ''}\n            >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { SlideDown } from \"react-slidedown\";\nimport { Content } from \"./components/Content\";\nimport { AddTodoForm } from \"./components/AddTodoForm\";\nimport { Container } from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-slidedown/lib/slidedown.css\";\n\nconst App = () => {\n  const totalTodos = useSelector((state) => state.todos.length);\n\n  const transition = {\n    transition: \"all ease-out 0.5s\",\n  };\n\n  return (\n    <Container\n      id='main-container'\n      className='bg-light p-5 rounded'\n      style={transition}\n    >\n      <h1>My Todo List</h1>\n      <hr className='mb-5'></hr>\n      <AddTodoForm />\n      <SlideDown className={\"my-dropdown-slidedown\"}>\n        {totalTodos > 0 && <Content />}\n      </SlideDown>\n    </Container>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { todoReducer } from \"./todoSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}